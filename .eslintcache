[{"/home/dudakp/Development/Education/interTut/src/index.tsx":"1","/home/dudakp/Development/Education/interTut/src/reportWebVitals.ts":"2","/home/dudakp/Development/Education/interTut/src/App.tsx":"3","/home/dudakp/Development/Education/interTut/src/common/context/CommonContexts.ts":"4","/home/dudakp/Development/Education/interTut/src/intro/pages/landingPage/LandingPage.tsx":"5","/home/dudakp/Development/Education/interTut/src/explanation/pages/explanation/Explanation.tsx":"6","/home/dudakp/Development/Education/interTut/src/login/pages/loginPage/LoginPage.tsx":"7","/home/dudakp/Development/Education/interTut/src/common/hooks/useQuery.ts":"8","/home/dudakp/Development/Education/interTut/src/intro/pages/landingPage/LandingPage.styles.tsx":"9","/home/dudakp/Development/Education/interTut/src/common/components/layout/Layout.tsx":"10","/home/dudakp/Development/Education/interTut/src/login/components/loginForm/LoginForm.tsx":"11","/home/dudakp/Development/Education/interTut/src/common/components/layout/LayoutStyles.ts":"12","/home/dudakp/Development/Education/interTut/src/common/hooks/useOnPath.ts":"13","/home/dudakp/Development/Education/interTut/src/common/components/navbar/NavBar.tsx":"14","/home/dudakp/Development/Education/interTut/src/common/components/footer/Footer.tsx":"15","/home/dudakp/Development/Education/interTut/src/common/components/if/If.tsx":"16","/home/dudakp/Development/Education/interTut/src/common/components/darkModeSwitch/DarkModeSwitch.tsx":"17","/home/dudakp/Development/Education/interTut/src/common/components/darkModeSwitch/DarkModeSwitchStyles.ts":"18","/home/dudakp/Development/Education/interTut/src/common/pages/congratulations/Congratulations.tsx":"19","/home/dudakp/Development/Education/interTut/src/common/components/avatar/Avatar.tsx":"20","/home/dudakp/Development/Education/interTut/src/common/hooks/useLogout.ts":"21","/home/dudakp/Development/Education/interTut/src/common/hooks/useExplanationRoute.ts":"22","/home/dudakp/Development/Education/interTut/src/common/hooks/useUserInfo.ts":"23","/home/dudakp/Development/Education/interTut/src/dashboard/pages/dashboard/Dashboard.tsx":"24","/home/dudakp/Development/Education/interTut/src/explanation/pages/explanation/ExplanationStyles.ts":"25","/home/dudakp/Development/Education/interTut/src/common/components/darkModeSwitch/DarkModeSwitch.test.tsx":"26"},{"size":703,"mtime":1622670427658,"results":"27","hashOfConfig":"28"},{"size":431,"mtime":1612020067853,"results":"29","hashOfConfig":"28"},{"size":2748,"mtime":1624897368814,"results":"30","hashOfConfig":"28"},{"size":213,"mtime":1614288720031,"results":"31","hashOfConfig":"28"},{"size":1732,"mtime":1623621064759,"results":"32","hashOfConfig":"28"},{"size":2290,"mtime":1625140616253,"results":"33","hashOfConfig":"28"},{"size":498,"mtime":1624829990971,"results":"34","hashOfConfig":"28"},{"size":217,"mtime":1623692559094,"results":"35","hashOfConfig":"28"},{"size":316,"mtime":1614438302434,"results":"36","hashOfConfig":"28"},{"size":1504,"mtime":1624901015099,"results":"37","hashOfConfig":"28"},{"size":1387,"mtime":1623517498167,"results":"38","hashOfConfig":"28"},{"size":618,"mtime":1623516214034,"results":"39","hashOfConfig":"28"},{"size":419,"mtime":1623518084435,"results":"40","hashOfConfig":"28"},{"size":1689,"mtime":1624896977067,"results":"41","hashOfConfig":"28"},{"size":761,"mtime":1625140616305,"results":"42","hashOfConfig":"28"},{"size":186,"mtime":1623517223582,"results":"43","hashOfConfig":"28"},{"size":907,"mtime":1625782733199,"results":"44","hashOfConfig":"28"},{"size":764,"mtime":1623947513233,"results":"45","hashOfConfig":"28"},{"size":493,"mtime":1624797297217,"results":"46","hashOfConfig":"28"},{"size":1559,"mtime":1625140616153,"results":"47","hashOfConfig":"28"},{"size":264,"mtime":1623694512260,"results":"48","hashOfConfig":"28"},{"size":292,"mtime":1624796614280,"results":"49","hashOfConfig":"28"},{"size":649,"mtime":1624795436735,"results":"50","hashOfConfig":"28"},{"size":267,"mtime":1624897462711,"results":"51","hashOfConfig":"28"},{"size":246,"mtime":1624900575904,"results":"52","hashOfConfig":"53"},{"size":227,"mtime":1625609522322,"results":"54","hashOfConfig":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1rzmbjp",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"oswqel",{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"u8jxub","/home/dudakp/Development/Education/interTut/src/index.tsx",[],"/home/dudakp/Development/Education/interTut/src/reportWebVitals.ts",[],"/home/dudakp/Development/Education/interTut/src/App.tsx",[],"/home/dudakp/Development/Education/interTut/src/common/context/CommonContexts.ts",[],"/home/dudakp/Development/Education/interTut/src/intro/pages/landingPage/LandingPage.tsx",["119"],"import React from 'react';\nimport { Box, Grid, ResponsiveContext } from 'grommet';\nimport { useHistory } from 'react-router-dom';\nimport { LandingPageProps } from './LandingPage.types';\nimport { StyledButton, StyledHeading, StyledList } from './LandingPage.styles';\nimport Layout from '../../../common/components/layout/Layout';\n\nconst technologies: string[] = [\n  'react',\n  'styled-components',\n  'recoil.js',\n  'typescript',\n  'authentification',\n  'SSR',\n  'monitoring & logging',\n  'deployment',\n];\n\nconst LandingPage: React.FC<LandingPageProps> = () => {\n  const size = React.useContext(ResponsiveContext);\n\n  const history = useHistory();\n\n  return (\n    <Layout>\n      <Grid\n        fill\n        rows={['auto']}\n        columns={['auto', 'auto']}\n        gap='small'\n        areas={[\n          { name: 'headings', start: [0, 0], end: [1, 0] },\n          { name: 'list', start: [1, 0], end: [1, 0] },\n        ]}\n        alignContent='between'\n      >\n        <Box gridArea='headings'>\n          <StyledHeading size='large'>Hello developer,</StyledHeading>\n          <StyledHeading size='medium'>\n            are you interested how to build me?\n          </StyledHeading>\n          <Box height='100px' width='300px' fill={size === 'small'}>\n            <StyledButton\n              primary\n              label='learn now'\n              onClick={(e) =>\n                history.push('/explanationFirst?id=intro/0_hello')\n              }\n            />\n          </Box>\n        </Box>\n        {size !== 'small' ? (\n          <Box gridArea='list'>\n            <StyledList data={technologies} alignSelf='end' />\n          </Box>\n        ) : (\n          ''\n        )}\n      </Grid>\n    </Layout>\n  );\n};\n\nexport default LandingPage;\n","/home/dudakp/Development/Education/interTut/src/explanation/pages/explanation/Explanation.tsx",["120","121","122"],"import React, { useEffect, useState } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport fm from 'front-matter';\nimport { Box, Button } from 'grommet';\nimport { useHistory } from 'react-router-dom';\nimport Layout from '../../../common/components/layout/Layout';\nimport useQuery from '../../../common/hooks/useQuery';\nimport { ExplanationProps, FrontMatterProperties } from './Explanation.types';\nimport If from '../../../common/components/if/If';\nimport useExplanationRoute from '../../../common/hooks/useExplanationRoute';\n\nconst Explanation: React.FC<ExplanationProps> = (props) => {\n  const [text, setText] = useState<string>('');\n  const [frontMatter, setFrontMatter] = useState<FrontMatterProperties>();\n\n  const history = useHistory();\n  const mdId = useQuery('id');\n  const explanationRoute = useExplanationRoute();\n\n  useEffect(() => {\n    import(`../../../res/text/${mdId}.md`)\n      .then((mdFile) => {\n        fetch(mdFile.default)\n          .then((res) => res.text())\n          .then((mdFileText) => {\n            const r = fm<FrontMatterProperties>(mdFileText);\n            setFrontMatter(r.attributes);\n            setText(r.body);\n          });\n      })\n      .catch((e) => {\n        console.error(`Error loading .md file: ${e}`);\n        setText('Something went wrong!');\n      })\n      .finally(() => {\n        console.log(`Sucesfully loaded ${mdId.split('/')[1]}.md file`);\n      });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [frontMatter?.nextId, mdId]);\n\n  return (\n    <Layout>\n      <Box direction='column'>\n        {/* <StyledMain fill='vertical'> */}\n        <ReactMarkdown>{text}</ReactMarkdown>\n        <If ifTrue={!frontMatter?.isLastInModule}>\n          <Button\n            primary\n            label={frontMatter?.buttonLabel}\n            onClick={() =>\n              history.push(`${explanationRoute}?id=${frontMatter?.nextId}`)\n            }\n          />\n        </If>\n        <If ifTrue={!frontMatter?.nextId}>\n          <Button\n            primary\n            label='Finish module'\n            onClick={() =>\n              history.push(`/congratulations?module=${frontMatter?.module}`)\n            }\n          />\n        </If>\n        {/* </StyledMain> */}\n      </Box>\n    </Layout>\n  );\n};\n\nexport default Explanation;\n","/home/dudakp/Development/Education/interTut/src/login/pages/loginPage/LoginPage.tsx",["123","124"],"import React, { useEffect } from 'react';\nimport { ResponsiveContext } from 'grommet';\nimport Layout from '../../../common/components/layout/Layout';\nimport LoginForm from '../../components/loginForm/LoginForm';\n\nconst LoginPage: React.FC<any> = () => {\n  const size = React.useContext(ResponsiveContext);\n\n  useEffect(() => console.log('asd'), []);\n  return (\n    <Layout mainMarginLeft={size !== 'small' ? '3rem' : undefined}>\n      <LoginForm />\n    </Layout>\n  );\n};\n\nexport default LoginPage;\n","/home/dudakp/Development/Education/interTut/src/common/hooks/useQuery.ts",["125"],"import { useLocation } from 'react-router-dom';\n\nconst useQuery: (queryParam: string) => any = (queryParam: string) => {\n  return new URLSearchParams(useLocation().search).get(queryParam);\n};\nexport default useQuery;\n","/home/dudakp/Development/Education/interTut/src/intro/pages/landingPage/LandingPage.styles.tsx",[],"/home/dudakp/Development/Education/interTut/src/common/components/layout/Layout.tsx",[],"/home/dudakp/Development/Education/interTut/src/login/components/loginForm/LoginForm.tsx",["126"],"import React from 'react';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardFooter,\n  CardHeader,\n  Heading,\n  Text,\n} from 'grommet';\nimport { Github, Google } from 'grommet-icons';\nimport { useOktaAuth } from '@okta/okta-react';\nimport If from '../../../common/components/if/If';\n\nconst LoginForm: React.FC<any> = () => {\n  const { authState, oktaAuth } = useOktaAuth();\n  const login = () => {\n    oktaAuth.signInWithRedirect({ originalUri: '/explanation?id=react' });\n  };\n\n  return (\n    <Card width='medium' background='rgba(108, 99, 255, .65)' elevation='large'>\n      <CardHeader pad='medium'>\n        <Heading>\n          Sign in <br /> to start your <u>journey</u>\n        </Heading>\n      </CardHeader>\n      <CardBody pad='medium'>\n        <Text alignSelf='start'>\n          everything in this tutorial is free, <br /> you only need to login\n          with GitHub or Google account\n        </Text>\n      </CardBody>\n      <If ifTrue={!authState.isAuthenticated}>\n        <CardFooter pad='small' justify='center'>\n          <Button\n            onClick={login}\n            icon={<Github size='large' color='plain' />}\n            hoverIndicator\n          />\n          <Button\n            onClick={login}\n            icon={<Google size='large' color='plain' />}\n            hoverIndicator\n          />\n        </CardFooter>\n      </If>\n    </Card>\n  );\n};\n\nexport default LoginForm;\n","/home/dudakp/Development/Education/interTut/src/common/components/layout/LayoutStyles.ts",[],"/home/dudakp/Development/Education/interTut/src/common/hooks/useOnPath.ts",[],"/home/dudakp/Development/Education/interTut/src/common/components/navbar/NavBar.tsx",["127"],"import React from 'react';\nimport { Box, Button, Header, Nav, Text, ThemeContext } from 'grommet';\nimport { useHistory } from 'react-router-dom';\nimport { useOktaAuth } from '@okta/okta-react';\nimport styled from 'styled-components';\nimport DarkModeSwitch from '../darkModeSwitch/DarkModeSwitch';\nimport { NavBarProps } from './NavBar.types';\nimport useOnPath from '../../hooks/useOnPath';\nimport If from '../if/If';\nimport Avatar from '../avatar/Avatar';\n\nconst AvatarContainer = styled(Box)`\n  margin-right: 2rem;\n`;\n\n// eslint-disable-next-line react/prop-types\nconst NavBar: React.FC<NavBarProps> = ({ boxProps }) => {\n  const history = useHistory();\n\n  const learning = useOnPath();\n\n  const { authState } = useOktaAuth();\n\n  return (\n    <ThemeContext.Extend value={{}}>\n      <Header>\n        <Box direction='row' align='center'>\n          <If\n            ifTrue={\n              !history.location.pathname.includes('/explanation') && learning\n            }\n          >\n            <Button onClick={(e) => history.push('/explanation?id=react')}>\n              <Box pad='small' direction='row' align='center' gap='small'>\n                <Text>peek under the hood</Text>\n              </Box>\n            </Button>\n          </If>\n        </Box>\n        {/* eslint-disable-next-line react/prop-types,react/jsx-props-no-spreading */}\n        <Nav {...boxProps} direction='row-reverse'>\n          <AvatarContainer pad='small' direction='row'>\n            <If ifTrue={authState.isAuthenticated}>\n              <Avatar />\n            </If>\n            <DarkModeSwitch />\n          </AvatarContainer>\n        </Nav>\n      </Header>\n    </ThemeContext.Extend>\n  );\n};\nexport default NavBar;\n","/home/dudakp/Development/Education/interTut/src/common/components/footer/Footer.tsx",[],"/home/dudakp/Development/Education/interTut/src/common/components/if/If.tsx",[],"/home/dudakp/Development/Education/interTut/src/common/components/darkModeSwitch/DarkModeSwitch.tsx",[],"/home/dudakp/Development/Education/interTut/src/common/components/darkModeSwitch/DarkModeSwitchStyles.ts",[],"/home/dudakp/Development/Education/interTut/src/common/pages/congratulations/Congratulations.tsx",[],"/home/dudakp/Development/Education/interTut/src/common/components/avatar/Avatar.tsx",["128","129"],"import React, { useEffect } from 'react';\nimport { Box, Menu } from 'grommet';\nimport { Dashboard, Gremlin, Logout } from 'grommet-icons';\nimport { AvatarProps } from './Avatar.types';\nimport useLogout from '../../hooks/useLogout';\nimport useUserInfo from '../../hooks/useUserInfo';\n\nconst Avatar: React.FC<AvatarProps> = (props) => {\n  const logout = useLogout();\n  const userInfo = useUserInfo();\n\n  useEffect(() => console.log(userInfo));\n  return (\n    <Box>\n      <Menu\n        // alignSelf='center'\n        icon={false}\n        items={[\n          {\n            label: (\n              <Box border='bottom' width='small'>\n                <b> {userInfo.given_name} </b>\n              </Box>\n            ),\n            onClick: () => {},\n          },\n          {\n            label: (\n              <Box direction='row' gap='small'>\n                <Dashboard />\n                dashboard\n              </Box>\n            ),\n            onClick: () => {},\n          },\n          {\n            label: (\n              <Box direction='row' gap='small'>\n                <Logout />\n                logout\n              </Box>\n            ),\n            onClick: () => logout(),\n          },\n        ]}\n        margin={{ vertical: 'small' }}\n        // dropContent={<AvatarDropdown />}\n        dropProps={{\n          align: {\n            top: 'bottom',\n          },\n        }}\n      >\n        <Box direction='row-responsive' gap='small'>\n          <Gremlin />\n          {userInfo.given_name}\n        </Box>\n      </Menu>\n    </Box>\n  );\n};\n\nexport default Avatar;\n","/home/dudakp/Development/Education/interTut/src/common/hooks/useLogout.ts",["130"],"import { useOktaAuth } from '@okta/okta-react';\n\nconst useLogout = () => {\n  const { oktaAuth } = useOktaAuth();\n\n  return async () => {\n    await oktaAuth.signOut({\n      postLogoutRedirectUri: 'http://localhost:3000/',\n    });\n  };\n};\n\nexport default useLogout;\n","/home/dudakp/Development/Education/interTut/src/common/hooks/useExplanationRoute.ts",["131"],"import { useOktaAuth } from '@okta/okta-react';\n\n/**\n * returns secured/unsecured route based on auth state\n * use in explanation page witch doesnt require user to be logged in\n */\nexport default () =>\n  useOktaAuth().authState.isAuthenticated\n    ? '/explanation'\n    : '/explanationFirst';\n","/home/dudakp/Development/Education/interTut/src/common/hooks/useUserInfo.ts",["132"],"import { useOktaAuth } from '@okta/okta-react';\nimport { useEffect, useState } from 'react';\n\nconst useUserInfo = () => {\n  const { authState, oktaAuth } = useOktaAuth();\n  const [userInfo, setUserInfo] = useState<{\n    email?: string;\n    given_name?: string;\n    family_name?: string;\n  }>({});\n\n  useEffect(() => {\n    const getUserInfo = async () => {\n      const userClaims = await oktaAuth.getUser().then((info) => info);\n      setUserInfo(userClaims);\n    };\n\n    if (!authState.isAuthenticated) {\n      setUserInfo({});\n    } else {\n      getUserInfo();\n    }\n  }, [authState, oktaAuth]);\n\n  return userInfo;\n};\n\nexport default useUserInfo;\n","/home/dudakp/Development/Education/interTut/src/dashboard/pages/dashboard/Dashboard.tsx",["133"],"import React from 'react';\nimport { DashboardProps } from './Dashboard.types';\nimport Layout from '../../../common/components/layout/Layout';\n\nconst Dashboard: React.FC<DashboardProps> = (props) => {\n  return <Layout>dashboard</Layout>;\n};\n\nexport default Dashboard;\n","/home/dudakp/Development/Education/interTut/src/explanation/pages/explanation/ExplanationStyles.ts",[],"/home/dudakp/Development/Education/interTut/src/common/components/darkModeSwitch/DarkModeSwitch.test.tsx",["134"],{"ruleId":"135","severity":1,"message":"136","line":46,"column":25,"nodeType":"137","messageId":"138","endLine":46,"endColumn":26},{"ruleId":"135","severity":1,"message":"139","line":12,"column":50,"nodeType":"137","messageId":"138","endLine":12,"endColumn":55},{"ruleId":"140","severity":1,"message":"141","line":32,"column":9,"nodeType":"142","messageId":"143","endLine":32,"endColumn":22},{"ruleId":"140","severity":1,"message":"141","line":36,"column":9,"nodeType":"142","messageId":"143","endLine":36,"endColumn":20},{"ruleId":"144","severity":1,"message":"145","line":6,"column":27,"nodeType":"146","messageId":"147","endLine":6,"endColumn":30,"suggestions":"148"},{"ruleId":"140","severity":1,"message":"141","line":9,"column":19,"nodeType":"142","messageId":"143","endLine":9,"endColumn":30},{"ruleId":"144","severity":1,"message":"145","line":3,"column":41,"nodeType":"146","messageId":"147","endLine":3,"endColumn":44,"suggestions":"149"},{"ruleId":"144","severity":1,"message":"145","line":15,"column":27,"nodeType":"146","messageId":"147","endLine":15,"endColumn":30,"suggestions":"150"},{"ruleId":"135","severity":1,"message":"136","line":33,"column":31,"nodeType":"137","messageId":"138","endLine":33,"endColumn":32},{"ruleId":"135","severity":1,"message":"139","line":8,"column":40,"nodeType":"137","messageId":"138","endLine":8,"endColumn":45},{"ruleId":"140","severity":1,"message":"141","line":12,"column":19,"nodeType":"142","messageId":"143","endLine":12,"endColumn":30},{"ruleId":"151","severity":1,"message":"152","line":3,"column":19,"nodeType":"153","messageId":"154","endLine":3,"endColumn":24},{"ruleId":"151","severity":1,"message":"152","line":7,"column":16,"nodeType":"153","messageId":"154","endLine":7,"endColumn":21},{"ruleId":"151","severity":1,"message":"152","line":4,"column":21,"nodeType":"153","messageId":"154","endLine":4,"endColumn":26},{"ruleId":"135","severity":1,"message":"139","line":5,"column":46,"nodeType":"137","messageId":"138","endLine":5,"endColumn":51},{"ruleId":"155","severity":1,"message":"156","line":5,"column":1,"nodeType":"157","messageId":"158","endLine":9,"endColumn":3},"@typescript-eslint/no-unused-vars","'e' is defined but never used.","Identifier","unusedVar","'props' is defined but never used.","no-console","Unexpected console statement.","MemberExpression","unexpected","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["159","160"],["161","162"],["163","164"],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","jest/expect-expect","Test has no assertions","CallExpression","noAssertions",{"messageId":"165","fix":"166","desc":"167"},{"messageId":"168","fix":"169","desc":"170"},{"messageId":"165","fix":"171","desc":"167"},{"messageId":"168","fix":"172","desc":"170"},{"messageId":"165","fix":"173","desc":"167"},{"messageId":"168","fix":"174","desc":"170"},"suggestUnknown",{"range":"175","text":"176"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"175","text":"177"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"178","text":"176"},{"range":"178","text":"177"},{"range":"179","text":"176"},{"range":"179","text":"177"},[239,242],"unknown","never",[89,92],[305,308]]